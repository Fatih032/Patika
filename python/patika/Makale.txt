Dünyayı Görme Biçiminizi Değiştirecek 5 Bilgisayarla Görme Tekniği
Bilgisayarla Görme, şu anda Derin Öğrenme içindeki en sıcak araştırma alanlarından biridir. Bilgisayar Bilimleri (Grafik, Algoritmalar, Teori, Sistemler, Mimari), Matematik (Bilgi Alma, Makine Öğrenimi), Mühendislik (Robotik, Konuşma, NLP, Görüntü İşleme), Fizik (Optik) gibi birçok akademik konunun kesişim noktasında yer alır. ), Biyoloji (Sinirbilim) ve Psikoloji (Bilişsel Bilim).
Bilgisayarla Görme, görsel ortamların ve bunların bağlamlarının göreceli bir anlayışını temsil ettiğinden, birçok bilim insanı, alanın alanlar arası ustalığı nedeniyle Yapay Genel Zeka'ya giden yolu açtığına inanıyor.
Peki Bilgisayarla Görme nedir?
İşte birkaç resmi ders kitabı tanımı:
“görüntülerden fiziksel nesnelerin açık, anlamlı tanımlarının inşası” (Ballard ve Brown, 1982)
“Bir veya daha fazla dijital görüntüden 3B dünyanın bilgi işlem özelliklerini” (Trucco ve Verri, 1998)
Algılanan görüntülere dayalı olarak gerçek fiziksel nesneler ve sahneler hakkında faydalı kararlar vermektir (Sockman ve Shapiro, 2001).
Neden Bilgisayarla Görme eğitimi almalısınız?
En açık cevap, bu çalışma alanından türetilen, hızla büyüyen bir yararlı uygulamalar koleksiyonunun olmasıdır. İşte onlardan sadece birkaçı:
Yüz tanıma: Snapchat ve Facebook, filtreler uygulamak ve sizi resimlerde tanımak için yüz algılama algoritmalarını kullanır.
Görsel alma: Google Görseller, alakalı görselleri aramak için içerik tabanlı sorgular kullanır. Algoritmalar, sorgu görüntüsündeki içeriği analiz eder ve en iyi eşleşen içeriğe dayalı sonuçları döndürür.
Oyun ve kontroller: Oyun alanında stereo görüş kullanan harika bir ticari ürün Microsoft Kinect'tir.
Gözetim: Gözetleme kameraları, halka açık yerlerde her yerde bulunur ve şüpheli davranışları tespit etmek için kullanılır.
Biyometri: Parmak izi, iris ve yüz eşleştirme, biyometrik tanımlamada bazı yaygın yöntemler olmaya devam etmektedir.
Akıllı arabalar: Görme, trafik işaretlerini, ışıklarını ve diğer görsel özellikleri tespit etmek için ana bilgi kaynağı olmaya devam ediyor.
Geçenlerde Stanford'un görsel tanıma için Evrişimli Sinir Ağlarını kullanma konusundaki harika CS231n kursunu bitirdim. Görüntü sınıflandırma, yerelleştirme ve algılama gibi görsel tanıma görevleri, Bilgisayarla görmenin temel bileşenleridir.
Sinir ağları ve derin öğrenme yaklaşımlarındaki son gelişmeler, bu son teknoloji görsel tanıma sistemlerinin performansını büyük ölçüde geliştirdi. Kurs, son teknoloji bilgisayarlı görü araştırmalarında kullanılan derin öğrenme mimarilerinin ayrıntılarını bana öğreten olağanüstü bir kaynaktır. Bu yazıda, öğrendiğim 5 ana bilgisayarla görü tekniğini ve bunların her birini kullanan başlıca derin öğrenme modellerini ve uygulamalarını paylaşmak istiyorum.
1 — Görüntü Sınıflandırma
Görüntü sınıflandırma sorunu şu şekildedir: Hepsi tek bir kategoriyle etiketlenmiş bir dizi görüntü verildiğinde, yeni bir dizi test görüntüsü için bu kategorileri tahmin etmemiz ve tahminlerin doğruluğunu ölçmemiz isteniyor. Bu görevle ilgili, bakış açısı değişikliği, ölçek değişikliği, sınıf içi değişiklik, görüntü deformasyonu, görüntü tıkanması, aydınlatma koşulları ve arka plan dağınıklığı dahil olmak üzere çeşitli zorluklar vardır.
Görüntüleri farklı kategorilere ayırabilen bir algoritma yazmaya nasıl başlayabiliriz? Computer Vision araştırmacıları, bunu çözmek için veri odaklı bir yaklaşım geliştirdiler. İlgilenilen görüntü kategorilerinin her birinin doğrudan kodda neye benzediğini belirlemeye çalışmak yerine, bilgisayara her bir görüntü sınıfının birçok örneğini sağlar ve ardından bu örneklere bakan ve her sınıfın görsel görünümünü öğrenen öğrenme algoritmaları geliştirir. .
Başka bir deyişle, önce etiketlenmiş görüntülerden oluşan bir eğitim veri kümesi biriktirirler, ardından verileri işlemek için bilgisayara beslerler. Bu gerçek göz önüne alındığında, tam görüntü sınıflandırma boru hattı aşağıdaki gibi resmileştirilebilir:
Girdimiz, her biri K farklı sınıftan biriyle etiketlenmiş N görüntüden oluşan bir eğitim veri kümesidir.
Ardından, sınıfların her birinin neye benzediğini öğrenmek için bir sınıflandırıcıyı eğitmek için bu eğitim setini kullanırız.
Sonunda, daha önce hiç görülmemiş yeni bir dizi görüntü için etiketleri tahmin etmesini isteyerek sınıflandırıcının kalitesini değerlendiririz. Daha sonra bu görüntülerin gerçek etiketlerini sınıflandırıcı tarafından tahmin edilen etiketlerle karşılaştıracağız.
Görüntü sınıflandırma için kullanılan en popüler mimari Evrişimli Sinir Ağlarıdır (CNN'ler). CNN'ler için tipik bir kullanım durumu, ağ görüntülerini beslediğiniz ve ağın verileri sınıflandırdığı yerdir. CNN'ler, tüm eğitim verilerini bir kerede ayrıştırmayı amaçlamayan bir giriş "tarayıcı" ile başlama eğilimindedir. Örneğin, 100 x 100 piksellik bir görüntü girmek için 10.000 düğümlü bir katman istemezsiniz.
Bunun yerine, görüntünün ilk 10 x 10 pikselini beslediğiniz 10 x 10'luk bir tarama girdi katmanı oluşturursunuz. Bu girişi geçtikten sonra, tarayıcıyı bir piksel sağa hareket ettirerek sonraki 10 x 10 pikseli beslersiniz. Bu teknik sürgülü pencereler olarak bilinir.
Bu girdi verileri daha sonra normal katmanlar yerine evrişimli katmanlardan beslenir. Her düğüm, yalnızca yakın komşu hücrelerle ilgilenir. Bu evrişimsel katmanlar ayrıca, çoğunlukla girdinin kolayca bölünebilen faktörleri tarafından derinleştikçe küçülme eğilimindedir. Bu evrişimsel katmanların yanı sıra, genellikle havuz katmanlarına da sahiptirler. Havuzlama, ayrıntıları filtrelemenin bir yoludur: Yaygın olarak bulunan bir havuzlama tekniği, örneğin 2 x 2 piksel aldığımız ve belirli bir özelliğin en fazla miktarına sahip pikseli aktardığımız maksimum havuzlamadır.
Günümüzde çoğu görüntü sınıflandırma tekniği, yaklaşık 1,2 milyon yüksek çözünürlüklü eğitim görüntüsü içeren bir veri kümesi olan ImageNet üzerinde eğitilmektedir. Test görüntüleri hiçbir başlangıç ​​notu (segmentasyon veya etiket olmadan) sunulmayacak ve algoritmaların, görüntülerde hangi nesnelerin bulunduğunu belirten etiketlemeler üretmesi gerekecektir. Mevcut en iyi bilgisayarlı görme yöntemlerinden bazıları, Oxford, INRIA ve XRCE'den önde gelen bilgisayarlı görme grupları tarafından bu veri setinde denendi. Tipik olarak, bilgisayarlı görü sistemleri karmaşık çok aşamalı ardışık düzenleri kullanır ve erken aşamalar tipik olarak birkaç parametrenin optimize edilmesiyle elle ayarlanır.
1. ImageNet yarışmasının galibi Alex Krizhevsky (NIPS 2012), Yann LeCun'un öncülük ettiği türde çok derin bir evrişimsel sinir ağı geliştirdi. Mimarisi, bazı maksimum havuz katmanlarını saymayan 7 gizli katman içerir. İlk katmanlar evrişimseldi, son 2 katman ise küresel olarak bağlantılıydı. Aktivasyon fonksiyonları, her gizli katmanda doğrusal birimlerle düzeltildi. Bunlar çok daha hızlı eğitimler ve lojistik birimlerden daha anlamlı. Buna ek olarak, yakındaki birimler daha güçlü faaliyetlere sahipken gizli faaliyetleri bastırmak için rekabetçi normalleştirmeyi de kullanır. Bu, yoğunluktaki değişikliklere yardımcı olur.
Donanım gereksinimleri açısından Alex, 2 Nvidia GTX 580 GPU'da (1000'den fazla hızlı küçük çekirdek) çok verimli bir evrişimsel ağ uygulaması kullanıyor. GPU'lar, matris matris çarpımları için çok iyidir ve ayrıca bellek için çok yüksek bant genişliğine sahiptir. Bu, ağı bir hafta içinde eğitmesine olanak tanır ve test zamanında 10 yamadan elde edilen sonuçları birleştirmeyi hızlı hale getirir. Durumları yeterince hızlı bir şekilde iletebilirsek, bir ağı birçok çekirdeğe yayabiliriz. Çekirdekler ucuzladıkça ve veri kümeleri büyüdükçe, büyük sinir ağları eski moda CV sistemlerinden daha hızlı gelişecektir. AlexNet'ten bu yana, CNN'yi omurga mimarisi olarak kullanan ve ImageNet'te mükemmel sonuçlar elde eden birçok yeni model olmuştur: ZFNet (2013), GoogLeNet (2014), VGGNet (2014), ResNet (2015), DenseNet (2016) vb.
2 — Nesne Algılama

Görüntüler içindeki nesneleri tanımlama görevi, genellikle tek tek nesneler için sınırlayıcı kutular ve etiketler çıkarmayı içerir. Bu, yalnızca tek bir baskın nesne yerine birçok nesneye sınıflandırma ve yerelleştirme uygulayarak sınıflandırma/yerelleştirme görevinden farklıdır. Yalnızca 2 sınıf nesne sınıflandırmanız vardır; bu, nesne sınırlayıcı kutular ve nesne olmayan sınırlayıcı kutular anlamına gelir. Örneğin, araba algılamada, belirli bir görüntüdeki tüm arabaları sınırlayıcı kutuları ile algılamanız gerekir.
Kayan Pencere tekniğini görüntüleri sınıflandırma ve yerelleştirme yöntemimiz gibi kullanırsak, görüntünün birçok farklı kırpmasına bir CNN uygulamamız gerekir. CNN, her ürünü nesne veya arka plan olarak sınıflandırdığından, CNN'yi çok sayıda konum ve ölçeğe uygulamamız gerekir, bu da hesaplama açısından çok pahalıdır!

Bununla başa çıkmak için, sinir ağı araştırmacıları, nesneler içermesi muhtemel “blobby” görüntü bölgelerini bulduğumuz bölgeleri kullanmayı önerdiler.
Bu çalıştırmak için nispeten hızlıdır. İşleri başlatan ilk model R-CNN (Bölge Tabanlı Evrişimli Sinir Ağı) idi. Bir R-CNN'de, önce ~2.000 bölge önerisi üreten Seçici Arama adlı bir algoritma kullanarak olası nesneler için giriş görüntüsünü tararız. Ardından, bu bölge önerilerinin her birinin üzerine bir CNN çalıştırıyoruz. Son olarak, her bir CNN'nin çıktısını alıyoruz ve bölgeyi sınıflandırmak için bir SVM'ye ve nesnenin sınırlayıcı kutusunu daraltmak için doğrusal bir regresyona besliyoruz.
Esasen, nesne algılamayı bir görüntü sınıflandırma problemine dönüştürdük. Ancak bazı problemler var - eğitim yavaş, çok fazla disk alanı gerekiyor ve çıkarım da yavaş.
Hızlı R-CNN, R-CNN'nin hemen ardından gelen, 2 büyütme yoluyla algılama hızını artıran Hızlı R-CNN'dir: 1) Bölgeleri önermeden önce özellik çıkarma gerçekleştirme, böylece tüm görüntü üzerinde yalnızca bir CNN çalıştırır ve 2) SVM'yi softmax katmanıyla değiştirme , böylece yeni bir model oluşturmak yerine sinir ağını tahminler için genişletir.
Hızlı R-CNN, tüm görüntü için yalnızca bir CNN eğittiği için hız açısından çok daha iyi performans gösterdi. Ancak, seçici arama algoritmasının bölge önerileri oluşturması hala çok zaman alıyor.
Böylece, artık derin öğrenme tabanlı nesne algılama için standart bir model olan Faster R-CNN'nin icadı gelir. Özelliklerden gelen teklifleri tahmin etmek için bir Bölge Öneri Ağı (RPN) ekleyerek yavaş seçici arama algoritmasını hızlı bir sinir ağıyla değiştirir. RPN, genel çıkarım sürecinin hesaplama gereksinimlerini azaltmak için “nereye” bakılacağına karar vermek için kullanılır. RPN, belirli bir bölgede daha fazla işlem yapılmasının gerekip gerekmediğini değerlendirmek için her konumu hızlı ve verimli bir şekilde tarar. Bunu, her biri, her bir konumda nesnenin olasılığını temsil eden 2 puanla k sınırlayıcı kutu teklifi vererek yapar.

Bölge tekliflerimizi aldıktan sonra, onları doğrudan bir Hızlı R-CNN olan şeye besliyoruz. Bir havuz katmanı ekliyoruz, bazı tam bağlantılı katmanlar ve son olarak bir softmax sınıflandırma katmanı ve sınırlayıcı kutu regresörü.
Toplamda, Faster R-CNN çok daha iyi hızlar ve daha yüksek doğruluk elde etti. Gelecekteki modellerin algılama hızlarını artırmak için çok şey yapmasına rağmen, çok az modelin Daha Hızlı R-CNN'den önemli bir farkla daha iyi performans gösterdiğini belirtmekte fayda var. Başka bir deyişle, Daha Hızlı R-CNN, nesne algılama için en basit veya en hızlı yöntem olmayabilir, ancak yine de en iyi performans gösterenlerden biridir.
Son yıllardaki Başlıca Nesne Algılama eğilimleri, daha hızlı ve daha verimli algılama sistemlerine doğru kaymıştır. Bu, Yalnızca Bir Kez Bakarsınız (YOLO), Tek Çekim Çoklu Kutu Dedektörü (SSD) ve Bölge Tabanlı Tam Evrişimli Ağlar (R-FCN) gibi yaklaşımlarda, tüm görüntü üzerinde hesaplamayı paylaşmaya yönelik bir hareket olarak görüldü. Bu nedenle, bu yaklaşımlar kendilerini 3 R-CNN tekniğiyle ilişkili maliyetli alt ağlardan ayırır. Bu eğilimlerin ardındaki temel mantık, ayrı algoritmaların kendi amaçlarına odaklanmasını önlemektir. Bu tipik olarak eğitim süresini arttırdığından ve ağ doğruluğunu azaltabileceğinden, ilgili alt problemler izolasyondadır.
14.000'den fazla makine öğrencisi ve veri bilimci arkadaşınıza katılın. Derin öğrenmeyle ilgili her şey için önde gelen haber bültenine abone olun.
3 — Nesne İzleme

Nesne İzleme, belirli bir sahnede belirli bir ilgi nesnesini veya birden çok nesneyi takip etme sürecini ifade eder. Geleneksel olarak, ilk nesne algılamasının ardından gözlemlerin yapıldığı video ve gerçek dünya etkileşimlerinde uygulamaları vardır. Şimdi, Uber ve Tesla gibi şirketlerden kendi kendini süren araçlar gibi otonom sürüş sistemleri için çok önemlidir.
Nesne İzleme yöntemleri, gözlem modeline göre 2 kategoriye ayrılabilir: üretici yöntem ve ayırt edici yöntem. Üretken yöntem, görünen özellikleri tanımlamak için üretici modeli kullanır ve PCA gibi nesneyi aramak için yeniden oluşturma hatasını en aza indirir.
Ayırt edici yöntem ayırt etmek için kullanılabilir. nesne ve arka plan arasında, performansı daha sağlamdır ve yavaş yavaş izlemede ana yöntem haline gelir. Ayırt edici yöntem, Tespit Yoluyla İzleme olarak da adlandırılır ve derin öğrenme bu kategoriye aittir. Tespit yoluyla izleme elde etmek için, tüm çerçeveler için aday nesneleri tespit eder ve adaylardan istenen nesneyi tanımak için derin öğrenmeyi kullanırız. Kullanılabilecek 2 tür temel ağ modeli vardır: yığınlanmış otomatik kodlayıcılar (SAE) ve evrişimli sinir ağı (CNN).
SAE kullanarak görevleri izlemek için en popüler derin ağ, çevrimdışı ön eğitim ve ağın çevrimiçi ince ayarını öneren Derin Öğrenme İzleyici'dir. Süreç şu şekilde çalışır:
Çevrimdışı denetimsiz, genel nesne gösterimini elde etmek için büyük ölçekli doğal görüntü veri kümelerini kullanarak yığılmış gürültü giderme otomatik kodlayıcıyı önceden eğitin. Yığılmış gürültü giderme otomatik kodlayıcı, giriş görüntülerine parazit ekleyerek ve orijinali yeniden oluşturarak daha sağlam özellik ifade yeteneği elde edebilir Görüntüler.
Sınıflandırma ağını elde etmek için önceden eğitilmiş ağın kodlama kısmını bir sınıflandırıcı ile birleştirin, ardından mevcut nesneyi ve arka planı ayırt edebilen ağda ince ayar yapmak için ilk çerçeveden elde edilen pozitif ve negatif örnekleri kullanın. DLT, mevcut çerçevenin aday yamaları üretmek için hareket modeli olarak parçacık filtresini kullanır. Sınıflandırma ağı, bu yamalar için olasılık puanlarını, yani sınıflandırmalarının güvenilirliğini verir, ardından nesne olarak bu yamalar arasından en yüksek olanı seçer.
Model güncellemesinde DLT limitli eşik yöntemini kullanır.

Görüntü sınıflandırma ve nesne algılamadaki üstünlüğü nedeniyle CNN, bilgisayarla görme ve görsel izlemede ana akım derin model haline geldi. Genel olarak konuşursak, büyük ölçekli bir CNN hem sınıflandırıcı hem de izleyici olarak eğitilebilir. 2 temsili CNN tabanlı izleme algoritması, tam evrişimli ağ izleyici (FCNT) ve çok alanlı CNN'dir (MD Net).
FCNT önceden eğitilmiş bir ImageNet olan VGG modelinin özellik haritalarını başarıyla analiz eder ve bunlardan yararlanır ve aşağıdaki gözlemlerle sonuçlanır:
CNN özellik haritaları, yerelleştirme ve izleme için kullanılabilir.
Birçok CNN özellik haritası, belirli bir nesneyi arka planından ayırt etme görevi için gürültülü veya ilgisizdir.
Daha yüksek katmanlar, nesne kategorilerindeki anlamsal kavramları yakalarken, alt katmanlar, sınıf içi varyasyonu yakalamak için daha ayırt edici özellikleri kodlar.
Bu gözlemler nedeniyle FCNT, VGG ağının conv4–3 ve conv5–3 katmanlarında en alakalı özellik haritalarını seçmek için özellik seçim ağını tasarlar. Ardından, gürültülü olanlarda fazla takılmayı önlemek için, seçilen özellik haritaları için iki katmandan ayrı ayrı ekstra iki kanal (SNet ve GNet olarak adlandırılır) tasarlar. GNet, nesnenin kategori bilgisini yakalarken, SNet nesneyi benzer bir görünüme sahip bir arka plandan ayırır.
Her iki ağ da nesnenin ısı haritalarını almak için ilk karede verilen sınırlayıcı kutu ile başlatılır ve yeni kareler için, son karede nesne konumunda ortalanmış bir ilgi alanı (ROI) kırpılır ve yayılır. Sonunda, SNet ve GNet aracılığıyla, sınıflandırıcı tahmin için iki ısı haritası alır ve izleyici, çeldirici olup olmadığına göre nihai izleme sonucunu üretmek için hangi ısı haritasının kullanılacağına karar verir. FCNT boru hattı aşağıda gösterilmiştir.

FCNT fikrinden farklı olarak, MD Net bir videonun tüm dizilerini, içindeki hareketleri izlemek için kullanır. Yukarıda bahsedilen ağlar, izleme verilerinin eğitim talebini azaltmak için alakasız görüntü verilerini kullanır ve bu fikir, izlemeden bir miktar sapmaya sahiptir. Bu videodaki bir sınıfın nesnesi başka bir videonun arka planı olabilir, bu nedenle MD Net, nesneyi ve arka planı her etki alanında bağımsız olarak ayırt etmek için çoklu etki alanı fikrini önerir. Ve bir etki alanı, aynı türde nesneyi içeren bir dizi videoyu belirtir.
Olarak aşağıda gösterildiği gibi, MD Net 2 bölüme ayrılmıştır: paylaşılan katmanlar ve alana özgü katmanların K dalları. Her dal, her etki alanındaki nesneyi ve arka planı ayırt etmek için kullanılan softmax kaybı olan bir ikili sınıflandırma katmanı ve genel temsili sağlamak için tüm etki alanlarıyla paylaşılan paylaşılan katmanlar içerir.

Son yıllarda, derin öğrenme araştırmacıları, görsel izleme görevinin özelliklerine uyum sağlamak için farklı yollar denediler. Keşfedilen birçok yön vardır: Tekrarlayan Sinir Ağı ve Derin İnanç Ağı gibi diğer ağ modellerini uygulamak, ağ yapısını video işlemeye ve uçtan uca öğrenmeye uyum sağlayacak şekilde tasarlamak, süreci, yapıyı ve parametreleri optimize etmek veya derin öğrenmeyi geleneksel bilgisayarlı görme yöntemleriyle veya Dil İşleme ve Konuşma Tanıma gibi diğer alanlardaki yaklaşımlarla birleştirmek bile.
4 — Semantik Bölümleme

Bilgisayarla Görmenin merkezinde, tüm görüntüleri parçalara ayıran segmentasyon süreci yer alır. daha sonra etiketlenebilen ve sınıflandırılabilen piksel grupları.
Özellikle Semantik Segmentasyon, görüntüdeki her pikselin rolünü semantik olarak anlamaya çalışır (örneğin, bir araba mı, bir motosiklet mi, yoksa başka bir sınıf türü mü?). Örneğin yukarıdaki resimde kişiyi, yolu, arabaları, ağaçları vs. tanımanın yanı sıra her bir nesnenin sınırlarını da çizmemiz gerekiyor. Bu nedenle, sınıflandırmadan farklı olarak, modellerimizden yoğun piksel bazında tahminlere ihtiyacımız var.
Diğer bilgisayarlı görme görevlerinde olduğu gibi, CNN'ler de segmentasyon problemlerinde muazzam bir başarı elde etti. Popüler ilk yaklaşımlardan biri, kayan bir pencere aracılığıyla yama sınıflandırmasıydı; burada her piksel, etrafındaki bir görüntü yaması kullanılarak sınıflara ayrı ayrı sınıflandırıldı. Ancak bu, çakışan yamalar arasında paylaşılan özellikleri yeniden kullanmadığımız için hesaplama açısından çok verimsizdir.
Bunun yerine çözüm, uçtan uca CNN mimarilerini popüler hale getiren UC Berkeley'nin Tam Evrişimli Ağları'dır (FCN). tam olarak bağlı katmanlar olmadan yoğun tahminler için. Bu, herhangi bir boyuttaki görüntüler için segmentasyon haritalarının oluşturulmasına izin verdi ve ayrıca yama sınıflandırma yaklaşımına kıyasla çok daha hızlıydı. Semantik segmentasyona yönelik sonraki hemen hemen tüm yaklaşımlar bu paradigmayı benimsemiştir.

Ancak geriye bir sorun kalır: orijinal görüntü çözünürlüğündeki kıvrımlar çok pahalı olacaktır. Bununla başa çıkmak için FCN, ağ içinde alt örnekleme ve üst örnekleme kullanır. Aşağı örnekleme katmanı, çizgili evrişim olarak bilinirken, üst örnekleme katmanı, aktarılmış evrişim olarak bilinir.
Yukarı örnekleme/aşağı örnekleme katmanlarına rağmen, FCN, havuzlama sırasında bilgi kaybı nedeniyle kaba segmentasyon haritaları üretir. SegNet, maksimum havuzlama ve kodlayıcı-kod çözücü çerçevesi kullanan FCN'den daha verimli bellek mimarisidir. SegNet'te, üst örnekleme/alt örneklemenin kabalığını iyileştirmek için daha yüksek çözünürlüklü özellik haritalarından kısayol/atlama bağlantıları sunulur.

Semantik Segmentasyonda son araştırmalar Dilated Convolutions, DeepLab ve RefineNet gibi tamamen evrişimli ağlara büyük ölçüde dayanır.
5 — Örnek Segmentasyonu

Semantik Segmentasyonun ötesinde, Örnek Segmentasyonu, 5 arabayı 5 farklı renkle etiketleme gibi farklı sınıf örneklerini segmentlere ayırır. Sınıflandırmada, genellikle odak olarak tek bir nesneye sahip bir görüntü vardır ve görev, bu görüntünün ne olduğunu söylemektir. Ancak örnekleri bölümlere ayırmak için çok daha karmaşık görevleri yerine getirmemiz gerekiyor. Üst üste binen birden fazla nesneye ve farklı arka plana sahip karmaşık manzaralar görüyoruz ve bu farklı nesneleri yalnızca sınıflandırmakla kalmıyor, aynı zamanda sınırlarını, farklılıklarını ve birbirleriyle olan ilişkilerini de tanımlıyoruz!